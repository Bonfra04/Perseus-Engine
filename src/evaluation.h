#pragma once

#include "BBmacros.h"
#include "Position.h"

/**
 * @brief The simpleEval function evaluates a given board, taking into account the material value of the board.
 * @param board The board to evaluate.
 * @return The value of the board.
 * @note This evaluation function is not very good, but it is a good starting point.
 */

const PScore materialValues[6] = {
    S(111,170), S(402,478), S(417,509), S(582,873), S(1116,1381), S(0,0)
};

const PScore pawnTable[64] = {
    S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    ,
    S(47,70)  , S(6,76)   , S(38,44)  , S(66,-12) , S(60,-13) , S(35,18)  , S(-63,79) , S(-60,86) ,
    S(-1,63)  , S(31,56)  , S(55,14)  , S(52,-25) , S(64,-31) , S(88,-5)  , S(56,39)  , S(1,55)   ,
    S(-5,26)  , S(-12,19) , S(4,-2)   , S(17,-25) , S(26,-27) , S(20,-14) , S(-10,12) , S(-7,16)  ,
    S(-19,4)  , S(-26,1)  , S(-10,-13), S(7,-24)  , S(6,-25)  , S(3,-17)  , S(-20,-7) , S(-16,-5) ,
    S(-16,-3) , S(-12,-8) , S(-10,-5) , S(-2,-9)  , S(8,-8)   , S(-7,-5)  , S(1,-12)  , S(-11,-13),
    S(-18,5)  , S(-13,5)  , S(-14,13) , S(-14,12) , S(-11,11) , S(-1,13)  , S(5,-2)   , S(-20,-5) ,
    S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    
};

const PScore knightTable[64] = {
    S(-164,-53), S(-112,1)  , S(-83,33)  , S(-6,14)   , S(16,14)   , S(-78,28)  , S(-117,16) , S(-118,-81),
    S(-8,-14)  , S(-9,15)   , S(46,12)   , S(109,15)  , S(73,26)   , S(101,2)   , S(-12,8)   , S(9,-19)   ,
    S(17,1)    , S(56,10)   , S(64,45)   , S(77,47)   , S(111,36)  , S(89,39)   , S(79,3)    , S(27,2)    ,
    S(24,13)   , S(43,30)   , S(61,54)   , S(72,65)   , S(67,66)   , S(83,46)   , S(61,36)   , S(39,15)   ,
    S(12,26)   , S(34,25)   , S(29,50)   , S(37,58)   , S(49,60)   , S(37,49)   , S(57,25)   , S(30,20)   ,
    S(-33,-5)  , S(-8,6)    , S(3,32)    , S(13,49)   , S(17,48)   , S(13,32)   , S(8,8)     , S(-7,-10)  ,
    S(-30,9)   , S(-40,14)  , S(-15,3)   , S(-1,20)   , S(3,19)    , S(-8,2)    , S(-18,4)   , S(-9,9)    ,
    S(-55,-20) , S(-31,-7)  , S(-17,-7)  , S(-19,5)   , S(-13,10)  , S(-15,0)   , S(-23,-2)  , S(-47,-29) 
};

const PScore bishopTable[64] = {
    S(-39,35) , S(-68,30) , S(-84,30) , S(-101,36), S(-86,38) , S(-104,28), S(-43,20) , S(-43,26) ,
    S(-36,19) , S(-3,27)  , S(2,25)   , S(-12,21) , S(17,13)  , S(13,21)  , S(-2,27)  , S(-25,16) ,
    S(15,28)  , S(35,25)  , S(30,26)  , S(35,16)  , S(41,18)  , S(47,26)  , S(50,21)  , S(36,25)  ,
    S(9,22)   , S(30,24)  , S(36,21)  , S(53,34)  , S(57,33)  , S(40,23)  , S(37,24)  , S(13,25)  ,
    S(7,10)   , S(8,16)   , S(17,34)  , S(37,30)  , S(43,31)  , S(18,31)  , S(15,18)  , S(11,9)   ,
    S(9,8)    , S(26,15)  , S(19,24)  , S(26,25)  , S(25,26)  , S(25,22)  , S(28,11)  , S(24,8)   ,
    S(24,3)   , S(17,-6)  , S(17,3)   , S(2,18)   , S(7,19)   , S(13,8)   , S(34,-3)  , S(25,-4)  ,
    S(24,0)   , S(16,10)  , S(6,20)   , S(-3,5)   , S(-7,11)  , S(2,22)   , S(8,12)   , S(26,-7)  
};

const PScore rookTable[64] = {
    S(41,56)  , S(20,65)  , S(8,73)   , S(11,71)  , S(23,69)  , S(24,70)  , S(46,62)  , S(64,53)  ,
    S(16,51)  , S(12,59)  , S(33,57)  , S(51,50)  , S(49,52)  , S(63,46)  , S(33,52)  , S(37,47)  ,
    S(7,47)   , S(60,29)  , S(39,41)  , S(60,31)  , S(81,25)  , S(75,29)  , S(101,18) , S(47,35)  ,
    S(3,41)   , S(30,34)  , S(34,39)  , S(48,30)  , S(46,30)  , S(48,29)  , S(57,30)  , S(36,31)  ,
    S(-29,24) , S(-7,34)  , S(-12,35) , S(-11,33) , S(-14,33) , S(-10,37) , S(12,32)  , S(-8,19)  ,
    S(-44,5)  , S(-3,13)  , S(-19,16) , S(-21,16) , S(-16,14) , S(-12,14) , S(27,3)   , S(-13,-12),
    S(-71,5)  , S(-28,4)  , S(-16,8)  , S(-14,6)  , S(-11,1)  , S(0,-4)   , S(8,-14)  , S(-52,-8) ,
    S(-26,7)  , S(-15,7)  , S(-10,10) , S(-3,2)   , S(-4,-1)  , S(0,10)   , S(2,1)    , S(-8,-6)  
};

const PScore queenTable[64] = {
    S(74,124) , S(52,162) , S(62,182) , S(83,196) , S(79,204) , S(81,188) , S(66,168) , S(65,156) ,
    S(36,140) , S(-20,188), S(19,201) , S(-1,239) , S(16,255) , S(54,208) , S(-17,210), S(31,171) ,
    S(60,143) , S(61,137) , S(40,197) , S(46,216) , S(53,212) , S(80,219) , S(107,146), S(111,162),
    S(51,151) , S(62,171) , S(56,173) , S(39,212) , S(40,227) , S(61,200) , S(79,194) , S(83,170) ,
    S(43,121) , S(51,147) , S(36,160) , S(39,188) , S(46,180) , S(42,181) , S(60,149) , S(64,143) ,
    S(42,87)  , S(53,98)  , S(48,125) , S(42,122) , S(47,120) , S(51,134) , S(67,106) , S(59,88)  ,
    S(37,69)  , S(51,54)  , S(59,50)  , S(57,75)  , S(54,81)  , S(63,48)  , S(57,50)  , S(37,61)  ,
    S(40,53)  , S(56,44)  , S(58,44)  , S(60,64)  , S(58,52)  , S(58,31)  , S(64,32)  , S(46,31)  
};

const PScore kingTable[64] = {
    S(-3,-152), S(38,-69) , S(35,-48) , S(3,-12)  , S(29,-29) , S(39,-20) , S(78,-30) , S(11,-153),
    S(-42,-31), S(35,32)  , S(18,29)  , S(77,8)   , S(42,22)  , S(81,32)  , S(53,45)  , S(44,-33) ,
    S(-37,5)  , S(91,42)  , S(67,49)  , S(27,50)  , S(43,48)  , S(115,46) , S(93,49)  , S(14,8)   ,
    S(-51,4)  , S(25,35)  , S(15,56)  , S(-40,68) , S(-21,64) , S(19,57)  , S(24,42)  , S(-69,9)  ,
    S(-62,-20), S(6,15)   , S(-21,47) , S(-76,69) , S(-76,68) , S(-30,48) , S(-25,25) , S(-93,-8) ,
    S(-46,-16), S(-23,2)  , S(-44,28) , S(-86,51) , S(-81,48) , S(-67,33) , S(-43,7)  , S(-60,-12),
    S(45,-37) , S(-2,-12) , S(-30,6)  , S(-93,23) , S(-84,20) , S(-64,15) , S(4,-15)  , S(37,-43) ,
    S(33,-103), S(43,-63) , S(11,-36) , S(-53,-41), S(-6,-57) , S(-51,-26), S(46,-64) , S(51,-117)
};

const PScore knightMob[9] = {
    S(-25,-96), S(-10,-31), S(4,7), S(13,27), S(20,37), S(28,49), S(36,48), S(47,44), S(57,25)
};

const PScore bishopMob[14] = {
    S(-65,-149), S(-21,-84), S(4,-28), S(14,0), S(24,18), S(31,36), S(37,49), S(40,54), S(44,63), S(52,64), S(65,59), S(92,50), S(107,55), S(130,26)
};

const PScore rookMob[15] = {
    S(-16,-100), S(-21,-53), S(-9,-3), S(-6,9), S(-4,29), S(-5,47), S(0,56), S(6,58), S(10,64), S(21,69), S(25,74), S(35,77), S(39,82), S(57,69), S(95,53)
};

const PScore queenMob[28] = {
    S(-88,-219), S(-52,-194), S(-7,-128), S(13,-34), S(19,72), S(27,136), S(34,177), S(40,200), S(46,222), S(52,232), S(59,238), S(65,246), S(69,250), S(73,259), S(75,265), S(76,270), S(77,274), S(75,281), S(79,282), S(86,279), S(93,277), S(105,266), S(116,256), S(141,238), S(169,212), S(191,188), S(177,130), S(167,125)
};

extern const PScore* pestoTables[6];

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };
extern PScore PSQTs[12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);